{
	"compiler": {
		"version": "0.7.6+commit.7338295f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "addressBlockedFromFlashLoan",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_from",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "_block",
						"type": "bool"
					}
				],
				"name": "blockAddressFromFlashLoan",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "_block",
						"type": "bool"
					}
				],
				"name": "blockTokenFromFlashLoan",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "feeCollector",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_collector",
						"type": "address"
					}
				],
				"name": "setFeeCollector",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "tokenBlockedFromFlashLoan",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"LimitswapFactory.sol": "LimitswapGate"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"LimitswapFactory.sol": {
			"keccak256": "0x4286fbfba9c289768e6c9503253c110ab82be346339e5136c640e32e817aaf6e",
			"license": "GPL-2.0",
			"urls": [
				"bzz-raw://2b2224355388414756afdc4d3c287f9acfc42c46f0cc51dcf278ee9a126c00ef",
				"dweb:/ipfs/QmRiSbawGLMaCyCnQUkSiTaEu322LZmxMwz1VN8k4ZQLAT"
			]
		},
		"interfaces/ILimitswapGate.sol": {
			"keccak256": "0x515e24c471bf3f5e3208f1eda85aad6447391ebe3cf3dc69e211d0069f91d5da",
			"license": "GPL 2.0",
			"urls": [
				"bzz-raw://b8e59e44a1aa0ec80381fb2740ad17f31b83fba643c612e1ce197893da9add91",
				"dweb:/ipfs/QmaNsvsw2bwVg5tkaALjUCNw54P2VEwAUjRA41h7bVNGwG"
			]
		},
		"interfaces/ILimitswapPair.sol": {
			"keccak256": "0xbc8bfe30c218069cddd2093fb5f4103efc2f5195fc6817d579dadde0d4346414",
			"license": "GPL 2.0",
			"urls": [
				"bzz-raw://e5454df701af6a6c10cbe359b46959a4f5992bfd8817310d290860ad2a4628f3",
				"dweb:/ipfs/QmXmK53D99SnrbJYKR3TknikqtySnpJhRC5LVL7cSV1ng3"
			]
		},
		"libraries/Context.sol": {
			"keccak256": "0xe6d13b9a66f240929712c44bc03db7be9563a327397f178cd8203c0b5ac2a385",
			"license": "MIT",
			"urls": [
				"bzz-raw://29c10b583551d0e95eb22274ad7fe2d097f39c9c51adb5eb237d1364902c78e4",
				"dweb:/ipfs/QmSXZdiyv94RcVgo5xYMs6kafuh9dPQFS6FgdvdvuxXm2M"
			]
		},
		"libraries/Ownable.sol": {
			"keccak256": "0x2680e4030cefaf8a228919528f805861f8aeba9b05292f718024ff2fb261f375",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a3f6072703b367dfedc9057ab408ed2f70df4992556d38731799245654813fc",
				"dweb:/ipfs/QmQRknSqXt5m4ZSRpMkWjAGt3uzmvaxjLDdyEpqqWQhZFP"
			]
		}
	},
	"version": 1
}